class Header
{
	gameType = Coop;
	minPlayers = 1;
	maxPlayers = 100;
};

onLoadName = "ARCMF";
onLoadMission = "ARCOMM Mission Framework.";
author = "ARCOMM";
overviewPicture = "splash.paa";
loadScreen = "splash.paa";
enableDebugConsole = 0;
disabledAI = 1;
respawn = 4;
respawndelay = 3;
respawnOnStart = 0;
respawnTemplates[] = {"Seagull","f_spectator"};

class CfgNotifications
{
	class Template
	{
		title = "";
		iconPicture = "";
		iconText = "";
		description = "";
		color[] = {1,1,1,1};
		duration = 5;
		priority = 0;
		difficulty[] = {};
	};

	class Alert
	{
		title = "ALERT";
		description = "%1";
		iconPicture="\A3\ui_f\data\map\markers\military\warning_ca.paa";
		duration = 3;
		priority = 9;
	};

	class SafeStart
	{
		title = "SAFE START";
		description = "%1";
		iconPicture="\A3\UI_F\data\IGUI\Cfg\Actions\settimer_ca.paa";
		duration = 10;
		priority = 0;
	};

	class SafeStartMissionStarting
	{
		title = "SAFE START";
		description = "%1";
		iconPicture="\A3\UI_F\data\IGUI\Cfg\Actions\settimer_ca.paa";
		duration = 3;
		priority = 1;
	};

	class JIP {
		title= "REINFORCEMENTS";
		description= "%1";
		iconPicture = "\A3\ui_f\data\map\markers\military\flag_ca.paa";
		duration = 3;
		priority = 5;
	};
};

class Params
{
    class f_param_debugMode
    {
		title = "Debug Mode";
		values[] = {0,1};
		texts[] = {"Off","On"};
		default = 0;
		code = "f_var_debugMode = %1";
    };

    class f_param_mission_timer
    {
		title = "Safe Start (mins)";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,15};
		texts[] = {"Off","1","2","3","4","5","6","7","8","9","10","15"};
		default = 0;
		code = "f_param_mission_timer = %1";
    };
	
	class f_param_caching
	{
		title = "Cache AI outside distance (m)";
		values[] = {0,600,800,1000,1500,2000,2500,3000,3500,4000,4500,5000};
		default = 0;
		code = "f_param_caching = %1";
	};

	class f_param_headless_client
	{
		title = "Headless Client";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = 1;
		code = "f_param_headless_client = if (%1 == 0) then {false} else {true};";
	};

	class arc_param_duplex
	{
		title = "Duplex Option";
		values[] = {0, 1};
		texts[] = {"Half Duplex", "Full Duplex"};
		default = 1;
		code = "arc_param_duplex = %1";
	};
	
	class arc_param_babel
	{
		title = "Babel";
		values[] = {0, 1};
		texts[] = {"Disabled (all sides understand each other)", "Enabled (all sides speak different languages)"};
		default = 0;
		code = "arc_param_babel = if (%1 == 0) then {false} else {true};";
	};
};

class CfgDebriefing
{
	class End1
	{
		title = "Ending #1";
		subtitle = "";
		description = "*** Insert debriefing #1 here. ***";
	};

	class End2
	{
		title = "Ending #2";
		subtitle = "";
		description = "*** Insert debriefing #2 here. ***";
	};

	class End3
	{
		title = "Ending #3";
		subtitle = "";
		description = "*** Insert debriefing #3 here. ***";
	};

	class End4
	{
		title = "Ending #4";
		subtitle = "";
		description = "*** Insert debriefing #4 here. ***";
	};

	class End5
	{
		title = "Ending #5";
		subtitle = "";
		description = "*** Insert debriefing #5 here. ***";
	};

	class End6
	{
		title = "Ending #6";
		subtitle = "";
		description = "*** Insert debriefing #6 here. ***";
	};
};

class CfgRespawnTemplates
{
	class f_Spectator
	{
		onPlayerRespawn = "f_fnc_CamInit";
	};
    class Seagull
    {
        onPlayerRespawn = "";
    };
	class f_JIP
	{
		onPlayerRespawn = "f\JIP\f_JIP_playerRespawn.sqf";
	};
};

#include "f\JIP\f_JIP_kitpicker.h"
#include "f\JIP\f_JIP_grppicker.h"
#include "f\spect\config.hpp"

class CfgFunctions
{
	#include "f\arc\config.hpp"

	class F
	{
		class common
		{
			file = "f\common";

			class processParamsArray
			{
				preInit = 1;
				postInit = 1;
			};

			class nearPlayer{};
		};
		class mpEnd
		{
			file = "f\mpEnd";
			class mpEnd{};
			class mpEndReceiver{};
		};
		class cache
		{
			file = "f\cache";
			class cInit {};
			class cTracker {};
			class gCache {};
			class gUncache {};
		};
		class assignGear
		{
			file = "f\assignGear";
			class assignGear{};
		};
		class setGroupID
		{
			file = "f\setGroupID";
			class setGroupID{};
		};
		class groupMarkers {
			file = "f\groupMarkers";
			class localGroupMarker{};
			class localSpecialistMarker{};
		};
		class FTMemberMarkers
		{
			file = "f\FTMemberMarkers";
			class SetLocalFTMemberMarkers{};
			class GetMarkerColor{};
			class LocalFTMarkerSync{};
			class GetMarker{};
		};
		class zeus
		{
			file = "f\zeus";
			class zeusInit{};
			class zeusAddAddons{};
			class zeusAddObjects{};
		};
		class acre
		{
			file = "f\radios\acre";
			class acre_removeRadios{};
			class acre_addRadios{};
			class acre_setRadioFrequencies{};
			class acre_configureSpectatorChat{};
		};
		class safeStart
		{
			file = "f\safeStart";
			class safety{};
		};
		#include "f\spect\functions.hpp"
	};
};

#include "config.hpp"